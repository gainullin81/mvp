// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  passwordHash    String           @default("")
  role            Role
  orders          Order[]
  inventoryActions InventoryAction[]
  suppliedProducts Product[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now())
}

enum Role {
  SELLER
  SUPPLIER
  DIRECTOR
}

model Product {
  id              Int              @id @default(autoincrement())
  name            String
  barcode         String           @unique
  stock           Int              @default(0)
  supplierId      Int
  supplier        User             @relation(fields: [supplierId], references: [id])
  orders          Order[]
  inventoryActions InventoryAction[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model Order {
  id         Int       @id @default(autoincrement())
  product    Product   @relation(fields: [productId], references: [id])
  productId  Int
  sellerId   Int
  seller     User      @relation(fields: [sellerId], references: [id])
  quantity   Int
  timestamp  DateTime  @default(now())
}

model InventoryAction {
  id         Int      @id @default(autoincrement())
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  delta      Int
  type       InventoryActionType
  actorId    Int
  actor      User     @relation(fields: [actorId], references: [id])
  timestamp  DateTime @default(now())
}

enum InventoryActionType {
  IN
  OUT
}
